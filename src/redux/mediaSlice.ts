import { createAsyncThunk, createSlice } from "@reduxjs/toolkit";
import { RootState } from "./store";

import { fetchAllMovies, fetchAllTvShows } from "../api/media";
import { toListView } from "../api/transformers";
import { Media } from "../types/Media";

export interface MediaState {
  movies: Media[];
  tvShows: Media[];
  loading: boolean;
}

export const initialState: MediaState = {
  movies: [],
  tvShows: [],
  loading: false,
};

// The function below is called a thunk and allows us to perform async logic. It
// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This
// will call the thunk with the `dispatch` function as the first argument.
export const getAllMediaAsync = createAsyncThunk(
  "media/fetchAllMedia",
  async () => {
    const moviesResponse = await fetchAllMovies();
    const tvResponse = await fetchAllTvShows();
    // The value we return becomes the `fulfilled` action payload
    const transformedMovies = toListView(moviesResponse.data.results);
    const transformedTvShows = toListView(tvResponse.data.results);
    return [transformedMovies, transformedTvShows];
  }
);

export const mediaSlice = createSlice({
  name: "media",
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {},
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder
      .addCase(getAllMediaAsync.pending, (state) => {
        state.loading = true;
      })
      .addCase(getAllMediaAsync.fulfilled, (state, action) => {
        state.loading = false;
        state.movies = action.payload[0];
        state.tvShows = action.payload[1];
      });
  },
});

// The function below is called a selector and allows us to select a value from
// the state.
export const selector = (state: RootState) => state.media;
export const allMoviesSelector = (state: RootState) => selector(state).movies;
export const allTvShowsSelector = (state: RootState) => selector(state).tvShows;
export const loadingSelector = (state: RootState) => selector(state).loading;

export default mediaSlice.reducer;
